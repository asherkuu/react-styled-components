{"version":3,"sources":["../../src/bin/www.js"],"names":["app","require","debug","http","port","normalizePort","process","env","PORT","set","server","createServer","listen","on","onError","onListening","val","parseInt","isNaN","error","syscall","bind","code","console","exit","addr","address"],"mappings":";;AAAA,IAAMA,MAAMC,QAAQ,WAAR,CAAZ;AACA,IAAMC,QAAQD,QAAQ,OAAR,EAAiB,kBAAjB,CAAd;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;;AAEA,IAAMG,OAAOC,cAAcC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,MAAlC,CAAb;AACAR,IAAIS,GAAJ,CAAQ,MAAR,EAAgBL,IAAhB;;AAEA;AACA,IAAMM,SAASP,KAAKQ,YAAL,CAAkBX,GAAlB,CAAf;;AAEA;AACAU,OAAOE,MAAP,CAAcR,IAAd;AACAM,OAAOG,EAAP,CAAU,OAAV,EAAmBC,OAAnB;AACAJ,OAAOG,EAAP,CAAU,WAAV,EAAuBE,WAAvB;;AAEA;AACA,SAASV,aAAT,CAAuBW,GAAvB,EAA4B;AACxB,QAAIZ,OAAOa,SAASD,GAAT,EAAc,EAAd,CAAX;;AAEA,QAAIE,MAAMd,IAAN,CAAJ,EAAiB;AACb,eAAOY,GAAP;AACH;;AAED,QAAIZ,QAAQ,CAAZ,EAAe;AACX,eAAOA,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAED;AACA,SAASU,OAAT,CAAiBK,KAAjB,EAAwB;AACpB,QAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC5B,cAAMD,KAAN;AACH;;AAED,QAAME,OAAO,OAAOjB,IAAP,KAAgB,QAAhB,GAA2B,UAAUA,IAArC,GAA4C,UAAUA,IAAnE;;AAEA,YAAQe,MAAMG,IAAd;AACI,aAAK,QAAL;AACIC,oBAAQJ,KAAR,CAAcE,OAAO,+BAArB;AACAf,oBAAQkB,IAAR,CAAa,CAAb;AACA;AACJ,aAAK,YAAL;AACID,oBAAQJ,KAAR,CAAcE,OAAO,oBAArB;AACAf,oBAAQkB,IAAR,CAAa,CAAb;AACA;AACJ;AACI,kBAAML,KAAN;AAVR;AAYH;;AAED;AACA,SAASJ,WAAT,GAAuB;AACnB,QAAMU,OAAOf,OAAOgB,OAAP,EAAb;AACA,QAAML,OAAO,OAAOI,IAAP,KAAgB,QAAhB,GAA2B,UAAUA,IAArC,GAA4C,UAAUA,IAAnE;AACAvB,UAAM,kBAAkBmB,IAAxB;AACH","file":"www.js","sourcesContent":["const app = require(\"../server\");\nconst debug = require(\"debug\")(\"p-netflix:server\");\nconst http = require(\"http\");\n\nconst port = normalizePort(process.env.PORT || \"8080\");\napp.set(\"port\", port);\n\n// Create HTTP server\nconst server = http.createServer(app);\n\n// Listen on provied port\nserver.listen(port);\nserver.on(\"error\", onError);\nserver.on(\"listening\", onListening);\n\n// normalizePort\nfunction normalizePort(val) {\n    var port = parseInt(val, 10);\n\n    if (isNaN(port)) {\n        return val;\n    }\n\n    if (port >= 0) {\n        return port;\n    }\n\n    return false;\n}\n\n// error event\nfunction onError(error) {\n    if (error.syscall !== \"listen\") {\n        throw error;\n    }\n\n    const bind = typeof port === \"string\" ? \"Pipe \" + port : \"Port \" + port;\n\n    switch (error.code) {\n        case \"EACCES\":\n            console.error(bind + \" requires elevated privileges\");\n            process.exit(1);\n            break;\n        case \"EADDRINUSE\":\n            console.error(bind + \" is already in use\");\n            process.exit(1);\n            break;\n        default:\n            throw error;\n    }\n}\n\n// Event listener\nfunction onListening() {\n    const addr = server.address();\n    const bind = typeof addr === \"string\" ? \"Pipe \" + addr : \"Port \" + addr;\n    debug(\"Listening on \" + bind);\n}\n"]}